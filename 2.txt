const http = require('http');
const url = 'http://example.com111';  // 替换为你要监控的 URL
1111111111111111111111111111111111111111111111111
const MAX_RESPONSE_TIME = 1; // 最大允许的响应时间（5秒）

const start = Date.now();

http.get(url, (response) => {
    const responseTime = Date.now() - start;  // 计算响应时间

    console.log('Response Time:', responseTime, 'ms');

    // 记录响应时间为自定义事件（如果需要）
    // newrelic.recordCustomEvent('ResponseTimeEvent', {
    //     responseTime: responseTime,
    //     url: url
    // });

    // 设置断言，检查响应时间是否超过最大值
    if (responseTime > MAX_RESPONSE_TIME) {
        throw new Error(`Response time exceeded threshold: ${responseTime} ms`);
    }

    // 断言 HTTP 状态码为 200
    if (response.statusCode !== 200) {
        throw new Error(`Expected status code 200, but got ${response.statusCode}`);
    }

}).on('error', (err) => {
    console.log('Error:', err.message);
    throw err; // 抛出错误以触发警报
});